.TH "DirectIOHelper" 3 "Wed Jul 31 2013" "VeilClient" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DirectIOHelper \- 
.PP
The \fBDirectIOHelper\fP class Storage helper used to access files on mounted as local filesystem\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBIStorageHelper\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDirectIOHelper\fP (std::vector< std::string >)"
.br
.RI "\fIThis storage helper uses only the first element of args vector\&. \fP"
.ti -1c
.RI "int \fBsh_getattr\fP (const char *path, struct stat *stbuf)"
.br
.ti -1c
.RI "int \fBsh_access\fP (const char *path, int mask)"
.br
.ti -1c
.RI "int \fBsh_readlink\fP (const char *path, char *buf, size_t size)"
.br
.ti -1c
.RI "int \fBsh_readdir\fP (const char *path, void *buf, fuse_fill_dir_t filler, off_t offset, struct fuse_file_info *fi)"
.br
.ti -1c
.RI "int \fBsh_mknod\fP (const char *path, mode_t mode, dev_t rdev)"
.br
.ti -1c
.RI "int \fBsh_mkdir\fP (const char *path, mode_t mode)"
.br
.ti -1c
.RI "int \fBsh_unlink\fP (const char *path)"
.br
.ti -1c
.RI "int \fBsh_rmdir\fP (const char *path)"
.br
.ti -1c
.RI "int \fBsh_symlink\fP (const char *from, const char *to)"
.br
.ti -1c
.RI "int \fBsh_rename\fP (const char *from, const char *to)"
.br
.ti -1c
.RI "int \fBsh_link\fP (const char *from, const char *to)"
.br
.ti -1c
.RI "int \fBsh_chmod\fP (const char *path, mode_t mode)"
.br
.ti -1c
.RI "int \fBsh_chown\fP (const char *path, uid_t uid, gid_t gid)"
.br
.ti -1c
.RI "int \fBsh_truncate\fP (const char *path, off_t size)"
.br
.ti -1c
.RI "int \fBsh_open\fP (const char *path, struct fuse_file_info *fi)"
.br
.ti -1c
.RI "int \fBsh_read\fP (const char *path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi)"
.br
.ti -1c
.RI "int \fBsh_write\fP (const char *path, const char *buf, size_t size, off_t offset, struct fuse_file_info *fi)"
.br
.ti -1c
.RI "int \fBsh_statfs\fP (const char *path, struct statvfs *stbuf)"
.br
.ti -1c
.RI "int \fBsh_release\fP (const char *path, struct fuse_file_info *fi)"
.br
.ti -1c
.RI "int \fBsh_fsync\fP (const char *path, int isdatasync, struct fuse_file_info *fi)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBDirectIOHelper\fP class Storage helper used to access files on mounted as local filesystem\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "DirectIOHelper::DirectIOHelper (std::vector< std::string >args)"

.PP
This storage helper uses only the first element of args vector\&. It shall be ablosute path to diretory used by this storage helper as root mount point\&. 
.SH "Member Function Documentation"
.PP 
.SS "int DirectIOHelper::sh_access (const char *path, intmask)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_chmod (const char *path, mode_tmode)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_chown (const char *path, uid_tuid, gid_tgid)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_fsync (const char *path, intisdatasync, struct fuse_file_info *fi)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_getattr (const char *path, struct stat *stbuf)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_link (const char *from, const char *to)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_mkdir (const char *path, mode_tmode)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_mknod (const char *path, mode_tmode, dev_trdev)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_open (const char *path, struct fuse_file_info *fi)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_read (const char *path, char *buf, size_tsize, off_toffset, struct fuse_file_info *fi)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_readdir (const char *path, void *buf, fuse_fill_dir_tfiller, off_toffset, struct fuse_file_info *fi)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_readlink (const char *path, char *buf, size_tsize)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_release (const char *path, struct fuse_file_info *fi)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_rename (const char *from, const char *to)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_rmdir (const char *path)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_statfs (const char *path, struct statvfs *stbuf)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_symlink (const char *from, const char *to)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_truncate (const char *path, off_tsize)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_unlink (const char *path)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.
.SS "int DirectIOHelper::sh_write (const char *path, const char *buf, size_tsize, off_toffset, struct fuse_file_info *fi)\fC [virtual]\fP"

.PP
Implements \fBIStorageHelper\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VeilClient from the source code\&.
