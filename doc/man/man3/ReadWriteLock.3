.TH "ReadWriteLock" 3 "Wed Jul 31 2013" "VeilClient" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ReadWriteLock \- 
.PP
The \fBReadWriteLock\fP class\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBReadWriteLock\fP ()"
.br
.ti -1c
.RI "\fB~ReadWriteLock\fP ()"
.br
.ti -1c
.RI "void \fBreadLock\fP ()"
.br
.RI "\fILocks for read operation\&. \fP"
.ti -1c
.RI "void \fBreadUnlock\fP ()"
.br
.RI "\fIUnlocks read lock\&. \fP"
.ti -1c
.RI "void \fBwriteLock\fP ()"
.br
.RI "\fILocks for write operation\&. \fP"
.ti -1c
.RI "void \fBwriteUnlock\fP ()"
.br
.RI "\fI< Unlocks write lock \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBDECLARE_MUTEX_FOR\fP (m_class)"
.br
.ti -1c
.RI "\fBDECLARE_MUTEX_FOR\fP (m_res)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "pthread_cond_t \fBm_classCond\fP"
.br
.ti -1c
.RI "int \fBm_readers\fP"
.br
.RI "\fIHow many readers are in critical section right now\&. \fP"
.ti -1c
.RI "int \fBm_writers\fP"
.br
.RI "\fIHow many writers are waitning in queue to access critical section\&. \fP"
.ti -1c
.RI "int \fBm_fairness\fP"
.br
.RI "\fIHow many readers was in critical section since last writer left\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The \fBReadWriteLock\fP class\&. 

Solves the 'library problem' (fast thread-safe read access) \fBReadWriteLock\fP should not be used directly\&. Use \fBAutoLock\fP wrapper instead, for automatic lock release (using RAII) 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ReadWriteLock::ReadWriteLock ()"

.SS "ReadWriteLock::~ReadWriteLock ()"

.SH "Member Function Documentation"
.PP 
.SS "ReadWriteLock::DECLARE_MUTEX_FOR (m_class)\fC [private]\fP"

.SS "ReadWriteLock::DECLARE_MUTEX_FOR (m_res)\fC [private]\fP"

.SS "void ReadWriteLock::readLock ()"

.PP
Locks for read operation\&. 
.SS "void ReadWriteLock::readUnlock ()"

.PP
Unlocks read lock\&. 
.SS "void ReadWriteLock::writeLock ()"

.PP
Locks for write operation\&. 
.SS "void ReadWriteLock::writeUnlock ()"

.PP
< Unlocks write lock 
.SH "Member Data Documentation"
.PP 
.SS "pthread_cond_t ReadWriteLock::m_classCond\fC [private]\fP"

.SS "int ReadWriteLock::m_fairness\fC [private]\fP"

.PP
How many readers was in critical section since last writer left\&. 
.SS "int ReadWriteLock::m_readers\fC [private]\fP"

.PP
How many readers are in critical section right now\&. 
.SS "int ReadWriteLock::m_writers\fC [private]\fP"

.PP
How many writers are waitning in queue to access critical section\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for VeilClient from the source code\&.
