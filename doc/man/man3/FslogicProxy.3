.TH "FslogicProxy" 3 "Wed Jul 31 2013" "VeilClient" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FslogicProxy \- 
.PP
The \fBFslogicProxy\fP class\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBISchedulable\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFslogicProxy\fP ()"
.br
.ti -1c
.RI "\fB~FslogicProxy\fP ()"
.br
.ti -1c
.RI "bool \fBgetFileAttr\fP (string logicName, FileAttr *attr)"
.br
.RI "\fIDownloads file attributes from cluster\&. \fP"
.ti -1c
.RI "bool \fBgetFileLocation\fP (string logicName, FileLocation *location)"
.br
.RI "\fIDownloads file location info\&. \fP"
.ti -1c
.RI "bool \fBgetNewFileLocation\fP (string logicName, mode_t mode, FileLocation *location)"
.br
.RI "\fIQuery cluser to create new file in DB and get its real location\&. \fP"
.ti -1c
.RI "int \fBrenewFileLocation\fP (string logicName)"
.br
.RI "\fITry to renew location validity for given file\&. \fP"
.ti -1c
.RI "bool \fBgetFileChildren\fP (string dirLogicName, uint32_t children_num, uint32_t offset, std::vector< std::string > *childrenNames)"
.br
.RI "\fIList files in given folder\&. \fP"
.ti -1c
.RI "std::string \fBrenameFile\fP (string fromLogicName, string toLogicName)"
.br
.RI "\fIRename/move file to new location\&. \fP"
.ti -1c
.RI "std::string \fBcreateDir\fP (string logicName, mode_t mode)"
.br
.RI "\fICreate directory\&. \fP"
.ti -1c
.RI "std::string \fBdeleteFile\fP (string logicName)"
.br
.RI "\fIDelete given file\&. \fP"
.ti -1c
.RI "bool \fBsendFileNotUsed\fP (string logicName)"
.br
.RI "\fIInform cluster that file isnt used anymore\&. \fP"
.ti -1c
.RI "std::string \fBchangeFilePerms\fP (string path, mode_t mode)"
.br
.RI "\fIChange file permissions\&. \fP"
.ti -1c
.RI "bool \fBrunTask\fP (\fBTaskID\fP taskId, string arg0, string arg1, string arg3)"
.br
.RI "\fITask runner derived from \fBISchedulable\fP\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "string \fBsendFuseReceiveSerializedMessage\fP (string messageType, string answerType, string messageInput)"
.br
.RI "\fISends and receives given protobuf message\&. \fP"
.ti -1c
.RI "string \fBsendFuseReceiveAtomMessage\fP (string messageType, string messageInput)"
.br
.RI "\fISends given protobuf message and receives atom\&. \fP"
.ti -1c
.RI "\fBCommunicationHandler\fP * \fBselectConnection\fP ()"
.br
.RI "\fIReturns pointer to \fBCommunicationHandler\fP that is not used at this moment\&. \fP"
.ti -1c
.RI "void \fBreleaseConnection\fP (\fBCommunicationHandler\fP *)"
.br
.RI "\fIReturns \fBCommunicationHandler\fP's pointer ownership back to connection pool\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBMessageBuilder\fP \fBm_messageBuilder\fP"
.br
.RI "\fI\fBMessageBuilder\fP used to construct cluster packets\&. \fP"
.ti -1c
.RI "std::list< \fBCommunicationHandler\fP * > \fBm_connectionPool\fP"
.br
.RI "\fIConnection pool\&. \fP"
.ti -1c
.RI "\fBReadWriteLock\fP \fBm_connectionPoolLock\fP"
.br
.RI "\fILock used to synchronize access to \fBFslogicProxy::m_connectionPool\fP\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBFslogicProxy\fP class\&. 

This class provides proxy-methods that runs their correspondent cluster-fslogic methods\&. Each object of \fBFslogicProxy\fP has its own connection pool, so in order to always use already opened connections there should be only one instance of this class unless you really need connection isolation between successive cluster requests\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FslogicProxy::FslogicProxy ()"

.SS "FslogicProxy::~FslogicProxy ()"

.SH "Member Function Documentation"
.PP 
.SS "string FslogicProxy::changeFilePerms (stringpath, mode_tmode)"

.PP
Change file permissions\&. 
.SS "string FslogicProxy::createDir (stringlogicName, mode_tmode)"

.PP
Create directory\&. 
.SS "string FslogicProxy::deleteFile (stringlogicName)"

.PP
Delete given file\&. 
.SS "bool FslogicProxy::getFileAttr (stringlogicName, FileAttr *attr)"

.PP
Downloads file attributes from cluster\&. 
.SS "bool FslogicProxy::getFileChildren (stringdirLogicName, uint32_tchildren_num, uint32_toffset, std::vector< std::string > *childrenNames)"

.PP
List files in given folder\&. 
.SS "bool FslogicProxy::getFileLocation (stringlogicName, FileLocation *location)"

.PP
Downloads file location info\&. 
.SS "bool FslogicProxy::getNewFileLocation (stringlogicName, mode_tmode, FileLocation *location)"

.PP
Query cluser to create new file in DB and get its real location\&. 
.SS "void FslogicProxy::releaseConnection (\fBCommunicationHandler\fP *conn)\fC [private]\fP"

.PP
Returns \fBCommunicationHandler\fP's pointer ownership back to connection pool\&. Returned connection can be selected later again and be reused to boost preformance\&. 
.SS "string FslogicProxy::renameFile (stringfromLogicName, stringtoLogicName)"

.PP
Rename/move file to new location\&. 
.SS "int FslogicProxy::renewFileLocation (stringlogicName)"

.PP
Try to renew location validity for given file\&. 
.SS "bool FslogicProxy::runTask (\fBTaskID\fPtaskId, stringarg0, stringarg1, stringarg3)\fC [virtual]\fP"

.PP
Task runner derived from \fBISchedulable\fP\&. \fBSee Also:\fP
.RS 4
\fBISchedulable::runTask\fP 
.RE
.PP

.PP
Implements \fBISchedulable\fP\&.
.SS "\fBCommunicationHandler\fP * FslogicProxy::selectConnection ()\fC [private]\fP"

.PP
Returns pointer to \fBCommunicationHandler\fP that is not used at this moment\&. This method uses simple round-robin selection from \fBFslogicProxy::m_connectionPool\fP\&. It also creates new instances of \fBCommunicationHandler\fP if needed\&. 
.PP
\fBWarning:\fP
.RS 4
You are reciving \fBCommunicationHandler\fP ownership ! It means that you have to either destroy or return ownership (prefered way, since this connection could be reused) via \fBFslogicProxy::releaseConnection\fP\&. 
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBFslogicProxy::releaseConnection\fP 
.RE
.PP

.SS "bool FslogicProxy::sendFileNotUsed (stringlogicName)"

.PP
Inform cluster that file isnt used anymore\&. 
.SS "string FslogicProxy::sendFuseReceiveAtomMessage (stringmessageType, stringmessageInput)\fC [private]\fP"

.PP
Sends given protobuf message and receives atom\&. This method is simalar to \fBFslogicProxy::sendFuseReceiveSerializedMessage\fP But receives simple atom cluster response\&.
.PP
\fBSee Also:\fP
.RS 4
\fBFslogicProxy::sendFuseReceiveSerializedMessage\fP 
.RE
.PP

.SS "string FslogicProxy::sendFuseReceiveSerializedMessage (stringmessageType, stringanswerType, stringmessageInput)\fC [private]\fP"

.PP
Sends and receives given protobuf message\&. High level method used to send serialized protobuf message to cluster and return its response\&. Both message and response types have to be subtype of FuseMessage\&. 
.PP
\fBParameters:\fP
.RS 4
\fIType\fP of message (name used by protobuf) 
.br
\fIType\fP of cluster answer (name used by protobuf) 
.br
\fISerialized\fP by protobuf lib message 
.RE
.PP
\fBReturns:\fP
.RS 4
Serialized by protobuf lib response 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "std::list<\fBCommunicationHandler\fP*> FslogicProxy::m_connectionPool\fC [private]\fP"

.PP
Connection pool\&. \fBSee Also:\fP
.RS 4
\fBFslogicProxy::selectConnection\fP 
.RE
.PP

.SS "\fBReadWriteLock\fP FslogicProxy::m_connectionPoolLock\fC [private]\fP"

.PP
Lock used to synchronize access to \fBFslogicProxy::m_connectionPool\fP\&. 
.SS "\fBMessageBuilder\fP FslogicProxy::m_messageBuilder\fC [private]\fP"

.PP
\fBMessageBuilder\fP used to construct cluster packets\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for VeilClient from the source code\&.
